CREATE TABLE IF NOT EXISTS users (
	EMAIL VARCHAR(254) PRIMARY KEY,
	USERNAME VARCHAR(50) UNIQUE NOT NULL,
	PASSWORD VARCHAR(60) NOT NULL,
	FIRST_NAME VARCHAR(50),
	LAST_NAME VARCHAR(50),
	SALT VARCHAR(50) NOT NULL,
	REGISTERED TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	LAST_ONLINE TIMESTAMP,
	NICKNAME VARCHAR(50) DEFAULT 'UNNAMED USER',
	CONSTRAINT USERNAME_MINUMUM CHECK (LENGTH(USERNAME) >= 8),
	CONSTRAINT PASSWORD_MINIMUM CHECK (LENGTH(PASSWORD) >= 12)
);

CREATE TABLE IF NOT EXISTS identified_users (
	ID SERIAL PRIMARY KEY,
	EMAIL VARCHAR(254) UNIQUE,
	FOREIGN KEY(EMAIL) REFERENCES users(EMAIL)
);

CREATE TABLE IF NOT EXISTS friends (
	USER1 SERIAL,
	USER2 SERIAL,
	SINCE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY(USER1,USER2),
	FOREIGN KEY(USER1) REFERENCES identified_users(ID),
	FOREIGN KEY(USER2) REFERENCES identified_users(ID),
	CONSTRAINT NO_SELF_CHAT CHECK (USER1 <> USER2)
);

CREATE TABLE IF NOT EXISTS chatgroup (
	ID SERIAL PRIMARY KEY,
	GROUP_NAME VARCHAR(40) NOT NULL,
	CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

CREATE TABLE IF NOT EXISTS chatgroup_user(
	CHAT_ID SERIAL NOT NULL,
	ID_USER SERIAL NOT NULL,
	JOINED TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	LAST_READ TIMESTAMP,
	NICKNAME VARCHAR(50),
	PRIMARY KEY(CHAT_ID,ID_USER),
	FOREIGN KEY(CHAT_ID) REFERENCES chatgroup(ID),
	FOREIGN KEY(ID_USER) REFERENCES identified_users(ID)
);

CREATE TABLE IF NOT EXISTS chatgroup_message(
	ID SERIAL NOT NULL UNIQUE,
	CHAT_ID SERIAL NOT NULL,
	SENDER SERIAL NOT NULL,
	SENT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	EDITED BOOLEAN,
	DELETED BOOLEAN,
	CONTENT VARCHAR(300) NOT NULL CHECK (LENGTH(CONTENT) > 10),
	PRIMARY KEY(CHAT_ID,ID),
	FOREIGN KEY(CHAT_ID) REFERENCES chatgroup(ID),
	FOREIGN KEY(SENDER) REFERENCES identified_users(ID)
);

CREATE TABLE IF NOT EXISTS edited_messages(
	MESSAGE_ID SERIAL NOT NULL,
	CHAT_ID SERIAL NOT NULL,
	EDITED TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	CONTENT VARCHAR(300) NOT NULL CHECK (LENGTH(CONTENT) > 10),
	PRIMARY KEY(CHAT_ID,MESSAGE_ID),
	FOREIGN KEY(CHAT_ID,MESSAGE_ID) REFERENCES chatgroup_message(CHAT_ID,ID)
);

CREATE TABLE IF NOT EXISTS game_type(
	ID SERIAL PRIMARY KEY,
	NAME VARCHAR(50) NOT NULL DEFAULT 'no.game.name',
	MIN_PLAYERS INTEGER NOT NULL,
	MAX_PLAYERS INTEGER NOT NULL,
	AVERAGE_TIME INTEGER NOT NULL,
	IMPLEMENTED BOOLEAN NOT NULL DEFAULT FALSE,
	DESCRIPTION VARCHAR(50) NOT NULL DEFAULT 'no.game.description'
);

INSERT INTO game_type(NAME,MIN_PLAYERS,MAX_PLAYERS,AVERAGE_TIME,IMPLEMENTED,DESCRIPTION)
VALUES('game.chess', 2, 2, 45, TRUE, 'chess.description');
INSERT INTO game_type(NAME,MIN_PLAYERS,MAX_PLAYERS,AVERAGE_TIME,DESCRIPTION)
VALUES('game.brunopoly', 3, 8, 999999, 'brunopoly.description');
INSERT INTO game_type(NAME,MIN_PLAYERS,MAX_PLAYERS,AVERAGE_TIME,DESCRIPTION)
VALUES('game.bazaar_merchants', 2, 2, 30, 'bazaar_merchants.description');
INSERT INTO game_type(NAME,MIN_PLAYERS,MAX_PLAYERS,AVERAGE_TIME,DESCRIPTION)
VALUES('game.settlers_of_canat', 3, 4, 45, 'settlers_of_canat.description');
INSERT INTO game_type(MIN_PLAYERS,MAX_PLAYERS,AVERAGE_TIME)
VALUES(1,1,0);

CREATE TABLE IF NOT EXISTS game_settings (
	ID SERIAL PRIMARY KEY
);

CREATE TABLE IF NOT EXISTS game_room(
	ID SERIAL PRIMARY KEY,
	NAME VARCHAR(50) NOT NULL,
	SETTINGS SERIAL NOT NULL,
	PRIVATE_GAME BOOLEAN NOT NULL DEFAULT FALSE,
	CHATROOM SERIAL NOT NULL,
	CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY(SETTINGS) REFERENCES game_settings(ID),
	FOREIGN KEY(CHATROOM) REFERENCES chatgroup(ID)
);

CREATE TABLE IF NOT EXISTS game_room_players(
	ROOM_ID SERIAL NOT NULL,
	PLAYER SERIAL NOT NULL,
	PLAYER_NUMBER INT NOT NULL,
	PRIMARY KEY(ROOM_ID,PLAYER),
	FOREIGN KEY (ROOM_ID) REFERENCES game_room(ID),
	FOREIGN KEY (PLAYER) REFERENCES identified_users(ID)
);

CREATE TABLE IF NOT EXISTS play(
	ID SERIAL NOT NULL,
	ROOM_ID SERIAL NOT NULL,
	PLAYER SERIAL NOT NULL,
	PLAYED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PLAY JSONB NOT NULL,
	PRIMARY KEY(ID,ROOM_ID,PLAYER),
	FOREIGN KEY(ROOM_ID) REFERENCES game_room(ID),
	FOREIGN KEY(PLAYER) REFERENCES identified_users(ID)
);

CREATE TABLE IF NOT EXISTS chess_settings(
	ID SERIAL PRIMARY KEY,
	WHITE_PLAYER SERIAL NOT NULL,
	BLACK_PLAYER SERIAL NOT NULL,
	MAX_TIME_PER_TURN INT NOT NULL DEFAULT '5',
	FOREIGN KEY(ID) REFERENCES game_settings(ID),
	FOREIGN KEY(WHITE_PLAYER) REFERENCES identified_users(ID),
	FOREIGN KEY(BLACK_PLAYER) REFERENCES identified_users(ID)
);

INSERT INTO users(EMAIL,USERNAME,PASSWORD,SALT) 
VALUES('test@mail.com','testuser','password12345','salty');
INSERT INTO identified_users(EMAIL) VALUES('test@mail.com');